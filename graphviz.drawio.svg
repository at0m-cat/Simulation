<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1115px" height="1665px" viewBox="-0.5 -0.5 1115 1665" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Safari/605.1.15&quot; version=&quot;24.7.14&quot;&gt;&#10;  &lt;diagram id=&quot;Gesbp5FvRQbopZ1pzDg8&quot; name=&quot;Страница — 1&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;1823&quot; dy=&quot;2902&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; background=&quot;none&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;node7&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Agronome&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ execute(GameMap): void&amp;lt;br/&amp;gt;+ cutTree(GameMap): void&amp;lt;br/&amp;gt;+ cutRock(GameMap): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;976&quot; y=&quot;-792&quot; width=&quot;202&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node16&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;AnsiSprite&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;785&quot; y=&quot;200&quot; width=&quot;129&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node15&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Coordinates&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ distanceTo(Entity): int&amp;lt;br/&amp;gt;+ equals(Object): boolean&amp;lt;br/&amp;gt;+ hashCode(): int&amp;lt;br/&amp;gt;+ toString(): String&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;233.5&quot; y=&quot;327&quot; width=&quot;194&quot; height=&quot;146&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node8&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;CreationWorld&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;- getCoordinatesMap(): Coordinates&amp;lt;br/&amp;gt;- getSquareMap(): int&amp;lt;br/&amp;gt;+ execute(GameMap): void&amp;lt;br/&amp;gt;- setupAllEntity(): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;446&quot; y=&quot;-733&quot; width=&quot;260&quot; height=&quot;146&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node21&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Creature&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ isValidTarget(TargetType): boolean&amp;lt;br/&amp;gt;+ setHp(double): void&amp;lt;br/&amp;gt;+ getHp(): double&amp;lt;br/&amp;gt;# contactToTarget(Entity, GameMap): void&amp;lt;br/&amp;gt;# makeMove(GameMap): void&amp;lt;br/&amp;gt;- isTargetContact(GameMap, Coordinates): boolean&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;711&quot; y=&quot;-567&quot; width=&quot;357&quot; height=&quot;183&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node20&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;DeadSouls&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;264&quot; y=&quot;-383&quot; width=&quot;133&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node27&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Entity&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ getCoordinates(): Coordinates&amp;lt;br/&amp;gt;+ getCoordintes(): Coordinates&amp;lt;br/&amp;gt;+ setCoordinates(Coordinates): void&amp;lt;br/&amp;gt;+ toString(): String&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;287&quot; y=&quot;-537&quot; width=&quot;259&quot; height=&quot;146&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node24&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;EntityFactory&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ setGrass(GameMap, int, int): void&amp;lt;br/&amp;gt;+ setThree(GameMap, int, int): void&amp;lt;br/&amp;gt;+ setHerbivore(GameMap, int, int, int): void&amp;lt;br/&amp;gt;+ setPredator(GameMap, int, int, int): void&amp;lt;br/&amp;gt;+ setRock(GameMap, int, int): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;216&quot; y=&quot;-200&quot; width=&quot;300&quot; height=&quot;159&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node14&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;EntityQuantity&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;- getSquareMap(): int&amp;lt;br/&amp;gt;+ getConstValues(): double[]&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;256&quot; y=&quot;-6&quot; width=&quot;213&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node23&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;enumeration&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;FamilyType&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ valueOf(String): FamilyType&amp;lt;br/&amp;gt;+ values(): FamilyType[]&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;600&quot; y=&quot;29&quot; width=&quot;218&quot; height=&quot;109&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node18&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Game&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ main(String[]): void&amp;lt;br/&amp;gt;+ gameLoop(): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;766.5&quot; y=&quot;350&quot; width=&quot;166&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node3&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;interface&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;GameActions&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ execute(GameMap): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;655&quot; y=&quot;-1010&quot; width=&quot;202&quot; height=&quot;84&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node19&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;GameMap&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ getAllGrass(): ArrayList&amp;amp;lt;Grass&amp;amp;gt;&amp;lt;br/&amp;gt;+ getAllThree(): ArrayList&amp;amp;lt;Three&amp;amp;gt;&amp;lt;br/&amp;gt;+ getTargets(GameMap, Entity): ArrayList&amp;amp;lt;T&amp;amp;gt;&amp;lt;br/&amp;gt;+ getAllPredators(): ArrayList&amp;amp;lt;Predator&amp;amp;gt;&amp;lt;br/&amp;gt;+ isSquareEmptyForMove(Coordinates, Entity): boolean&amp;lt;br/&amp;gt;+ isNotEntity(Coordinates): boolean&amp;lt;br/&amp;gt;+ removeEntity(Coordinates): void&amp;lt;br/&amp;gt;+ getAllEntities(): ArrayList&amp;amp;lt;Entity&amp;amp;gt;&amp;lt;br/&amp;gt;+ moveCreature(Coordinates, Coordinates): void&amp;lt;br/&amp;gt;+ isValidCoordinates(Coordinates): boolean&amp;lt;br/&amp;gt;+ getEntity(Coordinates): Entity&amp;lt;br/&amp;gt;+ getSizeMap(): Coordinates&amp;lt;br/&amp;gt;+ setEntities(Entity): void&amp;lt;br/&amp;gt;+ getAllHerbivore(): ArrayList&amp;amp;lt;Herbivore&amp;amp;gt;&amp;lt;br/&amp;gt;+ setEntities(Coordinates, Entity): void&amp;lt;br/&amp;gt;+ getAllDeadSouls(): ArrayList&amp;amp;lt;DeadSouls&amp;amp;gt;&amp;lt;br/&amp;gt;+ getAllRock(): ArrayList&amp;amp;lt;Rock&amp;amp;gt;&amp;lt;br/&amp;gt;+ isSquareEmptyForPrintMap(Coordinates): boolean&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;950&quot; y=&quot;182.5&quot; width=&quot;377&quot; height=&quot;471&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node1&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Grass&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ compareTo(Grass): int&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;213&quot; y=&quot;-335&quot; width=&quot;184&quot; height=&quot;68&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node6&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Herbivore&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ isDead(): boolean&amp;lt;br/&amp;gt;+ becomeEnergetic(): void&amp;lt;br/&amp;gt;+ makeMove(GameMap): void&amp;lt;br/&amp;gt;+ isFullHp(): boolean&amp;lt;br/&amp;gt;+ compareTo(Herbivore): int&amp;lt;br/&amp;gt;+ isPepful(int): boolean&amp;lt;br/&amp;gt;# contactToTarget(Entity, GameMap): void&amp;lt;br/&amp;gt;+ isValidTarget(TargetType): boolean&amp;lt;br/&amp;gt;+ motionCounter(): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;900&quot; y=&quot;-337&quot; width=&quot;298&quot; height=&quot;255&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node10&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;MapConsoleRenderer&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ renderer(GameMap): void&amp;lt;br/&amp;gt;- getSprite(Entity): String&amp;lt;br/&amp;gt;- colorizeSprite(String, Entity): String&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;611&quot; y=&quot;460&quot; width=&quot;263&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node5&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;interface&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;MotionController&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ isDead(): boolean&amp;lt;br/&amp;gt;+ isFullHp(): boolean&amp;lt;br/&amp;gt;+ becomeEnergetic(): void&amp;lt;br/&amp;gt;+ isPepful(int): boolean&amp;lt;br/&amp;gt;+ motionCounter(): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1121&quot; y=&quot;-555&quot; width=&quot;198&quot; height=&quot;159&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node0&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Murder&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ execute(GameMap): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;334&quot; y=&quot;-816&quot; width=&quot;202&quot; height=&quot;68&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node22&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Node&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;~ getF(): double&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;782.5&quot; y=&quot;250&quot; width=&quot;134&quot; height=&quot;68&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node26&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;PathToTarget&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;- execute(GameMap, Coordinates): void&amp;lt;br/&amp;gt;+ getPath(): ArrayList&amp;amp;lt;Coordinates&amp;amp;gt;&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;237.5&quot; y=&quot;487&quot; width=&quot;284&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node17&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Predator&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ isDead(): boolean&amp;lt;br/&amp;gt;# contactToTarget(Entity, GameMap): void&amp;lt;br/&amp;gt;+ isFullHp(): boolean&amp;lt;br/&amp;gt;+ getAttackPower(): double&amp;lt;br/&amp;gt;+ isValidTarget(TargetType): boolean&amp;lt;br/&amp;gt;+ setAttackPower(double): void&amp;lt;br/&amp;gt;+ motionCounter(): void&amp;lt;br/&amp;gt;+ isPepful(int): boolean&amp;lt;br/&amp;gt;+ makeMove(GameMap): void&amp;lt;br/&amp;gt;+ becomeEnergetic(): void&amp;lt;br/&amp;gt;+ getSatiety(): int&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;581&quot; y=&quot;-302&quot; width=&quot;298&quot; height=&quot;303&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node25&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Reborn&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ rebornGrass(): void&amp;lt;br/&amp;gt;+ rebornPredatorsFromThree(): void&amp;lt;br/&amp;gt;+ execute(GameMap): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;846&quot; y=&quot;-923&quot; width=&quot;258&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node4&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Rock&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;437&quot; y=&quot;-335&quot; width=&quot;88&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node2&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;ShiftsCreature&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;- setShifts(): int[][]&amp;lt;br/&amp;gt;+ getShifts(): int[][]&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;480&quot; y=&quot;347&quot; width=&quot;164&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node12&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;enumeration&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;StaticType&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ values(): StaticType[]&amp;lt;br/&amp;gt;+ valueOf(String): StaticType&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;842&quot; y=&quot;24&quot; width=&quot;214&quot; height=&quot;109&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node11&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;&amp;amp;lt;&amp;amp;lt;enumeration&amp;amp;gt;&amp;amp;gt;&amp;lt;/i&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;TargetType&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ values(): TargetType[]&amp;lt;br/&amp;gt;+ valueOf(String): TargetType&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1080&quot; y=&quot;29&quot; width=&quot;219&quot; height=&quot;109&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node28&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Three&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;437&quot; y=&quot;-383&quot; width=&quot;96&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node9&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;UpdateEveryTurn&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ execute(GameMap): void&amp;lt;br/&amp;gt;- makeMoveAll(): void&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;424&quot; y=&quot;-923&quot; width=&quot;202&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;node13&quot; value=&quot;&amp;lt;p style=&amp;quot;margin:0px;margin-top:4px;text-align:center;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;aStar&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;hr size=&amp;quot;1&amp;quot;/&amp;gt;&amp;lt;p style=&amp;quot;margin:0 0 0 4px;line-height:1.6;&amp;quot;&amp;gt;+ shortestPath(Coordinates, Coordinates, GameMap): ArrayList&amp;amp;lt;Coordinates&amp;amp;gt;&amp;lt;br/&amp;gt;- constructPath(Node): ArrayList&amp;amp;lt;Coordinates&amp;amp;gt;&amp;lt;br/&amp;gt;- getNeighbours(Coordinates, GameMap): List&amp;amp;lt;Coordinates&amp;amp;gt;&amp;lt;br/&amp;gt;- heuristic(Coordinates, Coordinates): int&amp;lt;/p&amp;gt;&quot; style=&quot;verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=1;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;240&quot; y=&quot;170&quot; width=&quot;516&quot; height=&quot;146&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge1&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.533;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node7&quot; target=&quot;node3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;763&quot; y=&quot;-737&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge0&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=1.001;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node8&quot; target=&quot;node3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;756&quot; y=&quot;-666&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge9&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node21&quot; target=&quot;node5&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge11&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.454;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node20&quot; target=&quot;node27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;405&quot; y=&quot;-369&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge4&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.485;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node1&quot; target=&quot;node27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;413&quot; y=&quot;-303&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge6&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.945;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node6&quot; target=&quot;node21&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge2&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.467;entryY=1.001;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node0&quot; target=&quot;node3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;749&quot; y=&quot;-785&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge7&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.055;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node17&quot; target=&quot;node21&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge10&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.566;entryY=1.001;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node25&quot; target=&quot;node3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;769&quot; y=&quot;-868&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge3&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.515;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node4&quot; target=&quot;node27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;421&quot; y=&quot;-321&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge5&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.546;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node28&quot; target=&quot;node27&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;429&quot; y=&quot;-369&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;edge12&quot; value=&quot;&quot; style=&quot;html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.434;entryY=1.000;entryDx=0;entryDy=0;&quot; parent=&quot;1&quot; source=&quot;node9&quot; target=&quot;node3&quot; edge=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;743&quot; y=&quot;-880&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;-8Vq8H4bkw5k-f3Me_IN-4&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=1;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.997;entryY=0.421;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0;exitY=0.5;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;node21&quot; target=&quot;node27&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;666&quot; y=&quot;-500&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;586.518&quot; y=&quot;-476.096&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" resource="https://app.diagrams.net/?highlight=0000ff&amp;edit=_blank&amp;layers=1&amp;nav=1#Hat0m-cat%2FSimulation%2Fmain%2Fgraphviz.drawio.svg"><defs/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="node7"><g><rect x="763" y="218" width="202" height="120" rx="18" ry="18" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 204px; height: 120px; padding-top: 218px; margin-left: 763px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 202px; height: 120px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Agronome</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ execute(GameMap): void<br />+ cutTree(GameMap): void<br />+ cutRock(GameMap): void</p></div></div></div></foreignObject><text x="763" y="232" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Agronome...</text></switch></g></g></g><g data-cell-id="node16"><g><rect x="572" y="1210" width="129" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 131px; height: 30px; padding-top: 1210px; margin-left: 572px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 129px; height: 30px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>AnsiSprite</b></p><hr size="1" /></div></div></div></foreignObject><text x="572" y="1224" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">AnsiSprite</text></switch></g></g></g><g data-cell-id="node15"><g><rect x="20.5" y="1337" width="194" height="146" rx="21.9" ry="21.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 196px; height: 146px; padding-top: 1337px; margin-left: 21px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 194px; height: 146px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Coordinates</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ distanceTo(Entity): int<br />+ equals(Object): boolean<br />+ hashCode(): int<br />+ toString(): String</p></div></div></div></foreignObject><text x="21" y="1351" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Coordinates...</text></switch></g></g></g><g data-cell-id="node8"><g><rect x="233" y="277" width="260" height="146" rx="21.9" ry="21.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 262px; height: 146px; padding-top: 277px; margin-left: 233px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 260px; height: 146px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>CreationWorld</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- getCoordinatesMap(): Coordinates<br />- getSquareMap(): int<br />+ execute(GameMap): void<br />- setupAllEntity(): void</p></div></div></div></foreignObject><text x="233" y="291" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">CreationWorld...</text></switch></g></g></g><g data-cell-id="node21"><g><rect x="498" y="443" width="357" height="183" rx="27.45" ry="27.45" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 359px; height: 183px; padding-top: 443px; margin-left: 498px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 357px; height: 183px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Creature</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ isValidTarget(TargetType): boolean<br />+ setHp(double): void<br />+ getHp(): double<br /># contactToTarget(Entity, GameMap): void<br /># makeMove(GameMap): void<br />- isTargetContact(GameMap, Coordinates): boolean</p></div></div></div></foreignObject><text x="498" y="457" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Creature...</text></switch></g></g></g><g data-cell-id="node20"><g><rect x="51" y="627" width="133" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 135px; height: 30px; padding-top: 627px; margin-left: 51px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 133px; height: 30px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>DeadSouls</b></p><hr size="1" /></div></div></div></foreignObject><text x="51" y="641" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">DeadSouls</text></switch></g></g></g><g data-cell-id="node27"><g><rect x="74" y="473" width="259" height="146" rx="21.9" ry="21.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 261px; height: 146px; padding-top: 473px; margin-left: 74px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 259px; height: 146px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Entity</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getCoordinates(): Coordinates<br />+ getCoordintes(): Coordinates<br />+ setCoordinates(Coordinates): void<br />+ toString(): String</p></div></div></div></foreignObject><text x="74" y="487" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Entity...</text></switch></g></g></g><g data-cell-id="node24"><g><rect x="3" y="810" width="300" height="159" rx="23.85" ry="23.85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 302px; height: 159px; padding-top: 810px; margin-left: 3px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 300px; height: 159px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>EntityFactory</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ setGrass(GameMap, int, int): void<br />+ setThree(GameMap, int, int): void<br />+ setHerbivore(GameMap, int, int, int): void<br />+ setPredator(GameMap, int, int, int): void<br />+ setRock(GameMap, int, int): void</p></div></div></div></foreignObject><text x="3" y="824" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">EntityFactory...</text></switch></g></g></g><g data-cell-id="node14"><g><rect x="43" y="1004" width="213" height="94" rx="14.1" ry="14.1" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 215px; height: 94px; padding-top: 1004px; margin-left: 43px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 213px; height: 94px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>EntityQuantity</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- getSquareMap(): int<br />+ getConstValues(): double[]</p></div></div></div></foreignObject><text x="43" y="1018" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">EntityQuantity...</text></switch></g></g></g><g data-cell-id="node23"><g><rect x="387" y="1039" width="218" height="109" rx="16.35" ry="16.35" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 220px; height: 109px; padding-top: 1039px; margin-left: 387px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 218px; height: 109px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>FamilyType</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ valueOf(String): FamilyType<br />+ values(): FamilyType[]</p></div></div></div></foreignObject><text x="387" y="1053" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g></g></g><g data-cell-id="node18"><g><rect x="553.5" y="1360" width="166" height="94" rx="14.1" ry="14.1" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 168px; height: 94px; padding-top: 1360px; margin-left: 554px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 166px; height: 94px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Game</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ main(String[]): void<br />+ gameLoop(): void</p></div></div></div></foreignObject><text x="554" y="1374" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Game...</text></switch></g></g></g><g data-cell-id="node3"><g><rect x="442" y="0" width="202" height="84" rx="12.6" ry="12.6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 204px; height: 84px; padding-top: 0px; margin-left: 442px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 202px; height: 84px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>GameActions</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ execute(GameMap): void</p></div></div></div></foreignObject><text x="442" y="14" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g></g></g><g data-cell-id="node19"><g><rect x="737" y="1192.5" width="377" height="471" rx="56.55" ry="56.55" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 379px; height: 471px; padding-top: 1193px; margin-left: 737px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 377px; height: 471px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>GameMap</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ getAllGrass(): ArrayList&lt;Grass&gt;<br />+ getAllThree(): ArrayList&lt;Three&gt;<br />+ getTargets(GameMap, Entity): ArrayList&lt;T&gt;<br />+ getAllPredators(): ArrayList&lt;Predator&gt;<br />+ isSquareEmptyForMove(Coordinates, Entity): boolean<br />+ isNotEntity(Coordinates): boolean<br />+ removeEntity(Coordinates): void<br />+ getAllEntities(): ArrayList&lt;Entity&gt;<br />+ moveCreature(Coordinates, Coordinates): void<br />+ isValidCoordinates(Coordinates): boolean<br />+ getEntity(Coordinates): Entity<br />+ getSizeMap(): Coordinates<br />+ setEntities(Entity): void<br />+ getAllHerbivore(): ArrayList&lt;Herbivore&gt;<br />+ setEntities(Coordinates, Entity): void<br />+ getAllDeadSouls(): ArrayList&lt;DeadSouls&gt;<br />+ getAllRock(): ArrayList&lt;Rock&gt;<br />+ isSquareEmptyForPrintMap(Coordinates): boolean</p></div></div></div></foreignObject><text x="737" y="1207" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">GameMap...</text></switch></g></g></g><g data-cell-id="node1"><g><rect x="0" y="675" width="184" height="68" rx="10.2" ry="10.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 186px; height: 68px; padding-top: 675px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 184px; height: 68px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Grass</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ compareTo(Grass): int</p></div></div></div></foreignObject><text x="0" y="689" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Grass...</text></switch></g></g></g><g data-cell-id="node6"><g><rect x="687" y="673" width="298" height="255" rx="38.25" ry="38.25" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 300px; height: 255px; padding-top: 673px; margin-left: 687px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 298px; height: 255px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Herbivore</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ isDead(): boolean<br />+ becomeEnergetic(): void<br />+ makeMove(GameMap): void<br />+ isFullHp(): boolean<br />+ compareTo(Herbivore): int<br />+ isPepful(int): boolean<br /># contactToTarget(Entity, GameMap): void<br />+ isValidTarget(TargetType): boolean<br />+ motionCounter(): void</p></div></div></div></foreignObject><text x="687" y="687" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Herbivore...</text></switch></g></g></g><g data-cell-id="node10"><g><rect x="398" y="1470" width="263" height="120" rx="18" ry="18" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 265px; height: 120px; padding-top: 1470px; margin-left: 398px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 263px; height: 120px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>MapConsoleRenderer</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ renderer(GameMap): void<br />- getSprite(Entity): String<br />- colorizeSprite(String, Entity): String</p></div></div></div></foreignObject><text x="398" y="1484" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">MapConsoleRenderer...</text></switch></g></g></g><g data-cell-id="node5"><g><rect x="908" y="455" width="198" height="159" rx="23.85" ry="23.85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 200px; height: 159px; padding-top: 455px; margin-left: 908px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 198px; height: 159px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;interface&gt;&gt;</i><br /><b>MotionController</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ isDead(): boolean<br />+ isFullHp(): boolean<br />+ becomeEnergetic(): void<br />+ isPepful(int): boolean<br />+ motionCounter(): void</p></div></div></div></foreignObject><text x="908" y="469" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">&lt;&lt;interface&gt;&gt;...</text></switch></g></g></g><g data-cell-id="node0"><g><rect x="121" y="194" width="202" height="68" rx="10.2" ry="10.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 204px; height: 68px; padding-top: 194px; margin-left: 121px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 202px; height: 68px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Murder</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ execute(GameMap): void</p></div></div></div></foreignObject><text x="121" y="208" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Murder...</text></switch></g></g></g><g data-cell-id="node22"><g><rect x="569.5" y="1260" width="134" height="68" rx="10.2" ry="10.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 136px; height: 68px; padding-top: 1260px; margin-left: 570px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 134px; height: 68px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Node</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">~ getF(): double</p></div></div></div></foreignObject><text x="570" y="1274" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Node...</text></switch></g></g></g><g data-cell-id="node26"><g><rect x="24.5" y="1497" width="284" height="94" rx="14.1" ry="14.1" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 286px; height: 94px; padding-top: 1497px; margin-left: 25px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 284px; height: 94px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>PathToTarget</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- execute(GameMap, Coordinates): void<br />+ getPath(): ArrayList&lt;Coordinates&gt;</p></div></div></div></foreignObject><text x="25" y="1511" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">PathToTarget...</text></switch></g></g></g><g data-cell-id="node17"><g><rect x="368" y="708" width="298" height="303" rx="44.7" ry="44.7" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 300px; height: 303px; padding-top: 708px; margin-left: 368px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 298px; height: 303px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Predator</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ isDead(): boolean<br /># contactToTarget(Entity, GameMap): void<br />+ isFullHp(): boolean<br />+ getAttackPower(): double<br />+ isValidTarget(TargetType): boolean<br />+ setAttackPower(double): void<br />+ motionCounter(): void<br />+ isPepful(int): boolean<br />+ makeMove(GameMap): void<br />+ becomeEnergetic(): void<br />+ getSatiety(): int</p></div></div></div></foreignObject><text x="368" y="722" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Predator...</text></switch></g></g></g><g data-cell-id="node25"><g><rect x="633" y="87" width="258" height="120" rx="18" ry="18" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 260px; height: 120px; padding-top: 87px; margin-left: 633px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 258px; height: 120px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Reborn</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ rebornGrass(): void<br />+ rebornPredatorsFromThree(): void<br />+ execute(GameMap): void</p></div></div></div></foreignObject><text x="633" y="101" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Reborn...</text></switch></g></g></g><g data-cell-id="node4"><g><rect x="224" y="675" width="88" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 90px; height: 30px; padding-top: 675px; margin-left: 224px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 88px; height: 30px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Rock</b></p><hr size="1" /></div></div></div></foreignObject><text x="224" y="689" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Rock</text></switch></g></g></g><g data-cell-id="node2"><g><rect x="267" y="1357" width="164" height="94" rx="14.1" ry="14.1" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 166px; height: 94px; padding-top: 1357px; margin-left: 267px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 164px; height: 94px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>ShiftsCreature</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">- setShifts(): int[][]<br />+ getShifts(): int[][]</p></div></div></div></foreignObject><text x="267" y="1371" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">ShiftsCreature...</text></switch></g></g></g><g data-cell-id="node12"><g><rect x="629" y="1034" width="214" height="109" rx="16.35" ry="16.35" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 216px; height: 109px; padding-top: 1034px; margin-left: 629px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 214px; height: 109px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>StaticType</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ values(): StaticType[]<br />+ valueOf(String): StaticType</p></div></div></div></foreignObject><text x="629" y="1048" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g></g></g><g data-cell-id="node11"><g><rect x="867" y="1039" width="219" height="109" rx="16.35" ry="16.35" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 221px; height: 109px; padding-top: 1039px; margin-left: 867px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 219px; height: 109px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><i>&lt;&lt;enumeration&gt;&gt;</i><br /><b>TargetType</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ values(): TargetType[]<br />+ valueOf(String): TargetType</p></div></div></div></foreignObject><text x="867" y="1053" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">&lt;&lt;enumeration&gt;&gt;...</text></switch></g></g></g><g data-cell-id="node28"><g><rect x="224" y="627" width="96" height="30" rx="4.5" ry="4.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 98px; height: 30px; padding-top: 627px; margin-left: 224px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 96px; height: 30px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>Three</b></p><hr size="1" /></div></div></div></foreignObject><text x="224" y="641" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">Three</text></switch></g></g></g><g data-cell-id="node9"><g><rect x="211" y="87" width="202" height="94" rx="14.1" ry="14.1" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 204px; height: 94px; padding-top: 87px; margin-left: 211px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 202px; height: 94px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>UpdateEveryTurn</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ execute(GameMap): void<br />- makeMoveAll(): void</p></div></div></div></foreignObject><text x="211" y="101" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">UpdateEveryTurn...</text></switch></g></g></g><g data-cell-id="node13"><g><rect x="27" y="1180" width="516" height="146" rx="21.9" ry="21.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 518px; height: 146px; padding-top: 1180px; margin-left: 27px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 516px; height: 146px; overflow: hidden;"><div style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin:0px;margin-top:4px;text-align:center;"><b>aStar</b></p><hr size="1" /><p style="margin:0 0 0 4px;line-height:1.6;">+ shortestPath(Coordinates, Coordinates, GameMap): ArrayList&lt;Coordinates&gt;<br />- constructPath(Node): ArrayList&lt;Coordinates&gt;<br />- getNeighbours(Coordinates, GameMap): List&lt;Coordinates&gt;<br />- heuristic(Coordinates, Coordinates): int</p></div></div></div></foreignObject><text x="27" y="1194" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="14px">aStar...</text></switch></g></g></g><g data-cell-id="edge1"><g><path d="M 763 278 L 763 275.5 Q 763 273 753 273 L 559.7 273 Q 549.7 273 549.7 263 L 549.67 98.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 549.67 85.12 L 556.17 98.12 L 543.17 98.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge0"><g><path d="M 493 350 L 493 347 Q 493 344 503 344 L 533 344 Q 543 344 543 334 L 543 98.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 543 85.12 L 549.5 98.12 L 536.5 98.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge9"><g><path d="M 855 534.5 L 893.88 534.5" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 906.88 534.5 L 893.88 541 L 893.88 528 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge11"><g><path d="M 184 642 L 184 641.5 Q 184 641 187.8 641 L 189.7 641 Q 191.6 641 191.6 637.06 L 191.59 633.12" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 191.59 620.12 L 198.09 633.11 L 185.09 633.12 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge4"><g><path d="M 184 709 L 184 708 Q 184 707 191.8 707 L 195.7 707 Q 199.6 707 199.6 697 L 199.61 633.12" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 199.61 620.12 L 206.11 633.12 L 193.11 633.12 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge6"><g><path d="M 836 673 L 836 659.5 Q 836 649.5 835.87 644.81 L 835.75 640.11" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 835.4 627.12 L 842.24 639.94 L 829.25 640.29 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge2"><g><path d="M 323 228 L 323 226.5 Q 323 225 333 225 L 526.3 225 Q 536.3 225 536.3 215 L 536.34 98.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 536.35 85.12 L 542.84 98.12 L 529.84 98.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge7"><g><path d="M 517 708 L 517 677 Q 517 667 517.15 657 L 517.42 640.12" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 517.62 627.12 L 523.92 640.22 L 510.92 640.02 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge10"><g><path d="M 633 147 L 633 144.5 Q 633 142 623 142 L 566.3 142 Q 556.3 142 556.3 132 L 556.3 98.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 556.31 85.12 L 562.8 98.12 L 549.8 98.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge3"><g><path d="M 224 690 L 224 689.5 Q 224 689 215.7 689 L 211.55 689 Q 207.4 689 207.4 679 L 207.39 633.12" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 207.39 620.12 L 213.89 633.12 L 200.89 633.12 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge5"><g><path d="M 224 642 L 224 641.5 Q 224 641 219.7 641 L 217.55 641 Q 215.4 641 215.4 637.06 L 215.41 633.12" fill="none" stroke="#000082" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 215.41 620.12 L 221.91 633.12 L 208.91 633.11 Z" fill="#000082" stroke="#000082" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="edge12"><g><path d="M 413 134 L 413 132 Q 413 130 423 130 L 519.7 130 Q 529.7 130 529.69 120 L 529.68 98.12" fill="none" stroke="#008200" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 529.67 85.12 L 536.18 98.11 L 523.18 98.12 Z" fill="#008200" stroke="#008200" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="-8Vq8H4bkw5k-f3Me_IN-4"><g><path d="M 498 534.5 L 338.59 534.47" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 333.34 534.47 L 340.34 530.97 L 338.59 534.47 L 340.34 537.97 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g></g></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>